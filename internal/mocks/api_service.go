// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/base-org/pessimism/internal/api/service (interfaces: Service)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	models "github.com/base-org/pessimism/internal/api/models"
	core "github.com/base-org/pessimism/internal/core"
	gomock "github.com/golang/mock/gomock"
)

// MockService is a mock of Service interface.
type MockService struct {
	ctrl     *gomock.Controller
	recorder *MockServiceMockRecorder
}

// MockServiceMockRecorder is the mock recorder for MockService.
type MockServiceMockRecorder struct {
	mock *MockService
}

// NewMockService creates a new mock instance.
func NewMockService(ctrl *gomock.Controller) *MockService {
	mock := &MockService{ctrl: ctrl}
	mock.recorder = &MockServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockService) EXPECT() *MockServiceMockRecorder {
	return m.recorder
}

// CheckETHRPCHealth mocks base method.
func (m *MockService) CheckETHRPCHealth(arg0 core.Network) bool {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CheckETHRPCHealth", arg0)
	ret0, _ := ret[0].(bool)
	return ret0
}

// CheckETHRPCHealth indicates an expected call of CheckETHRPCHealth.
func (mr *MockServiceMockRecorder) CheckETHRPCHealth(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CheckETHRPCHealth", reflect.TypeOf((*MockService)(nil).CheckETHRPCHealth), arg0)
}

// CheckHealth mocks base method.
func (m *MockService) CheckHealth() *models.HealthCheck {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CheckHealth")
	ret0, _ := ret[0].(*models.HealthCheck)
	return ret0
}

// CheckHealth indicates an expected call of CheckHealth.
func (mr *MockServiceMockRecorder) CheckHealth() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CheckHealth", reflect.TypeOf((*MockService)(nil).CheckHealth))
}

// ProcessHeuristicRequest mocks base method.
func (m *MockService) ProcessHeuristicRequest(arg0 *models.SessionRequestBody) (core.SUUID, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ProcessHeuristicRequest", arg0)
	ret0, _ := ret[0].(core.SUUID)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ProcessHeuristicRequest indicates an expected call of ProcessHeuristicRequest.
func (mr *MockServiceMockRecorder) ProcessHeuristicRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ProcessHeuristicRequest", reflect.TypeOf((*MockService)(nil).ProcessHeuristicRequest), arg0)
}

// RunHeuristicSession mocks base method.
func (m *MockService) RunHeuristicSession(arg0 *models.SessionRequestParams) (core.SUUID, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RunHeuristicSession", arg0)
	ret0, _ := ret[0].(core.SUUID)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// RunHeuristicSession indicates an expected call of RunHeuristicSession.
func (mr *MockServiceMockRecorder) RunHeuristicSession(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RunHeuristicSession", reflect.TypeOf((*MockService)(nil).RunHeuristicSession), arg0)
}
