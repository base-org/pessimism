// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/base-org/pessimism/internal/client (interfaces: GethClient)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	big "math/big"
	reflect "reflect"

	common "github.com/ethereum/go-ethereum/common"
	gethclient "github.com/ethereum/go-ethereum/ethclient/gethclient"
	gomock "github.com/golang/mock/gomock"
)

// MockGethClient is a mock of GethClient interface.
type MockGethClient struct {
	ctrl     *gomock.Controller
	recorder *MockGethClientMockRecorder
}

// MockGethClientMockRecorder is the mock recorder for MockGethClient.
type MockGethClientMockRecorder struct {
	mock *MockGethClient
}

// NewMockGethClient creates a new mock instance.
func NewMockGethClient(ctrl *gomock.Controller) *MockGethClient {
	mock := &MockGethClient{ctrl: ctrl}
	mock.recorder = &MockGethClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockGethClient) EXPECT() *MockGethClientMockRecorder {
	return m.recorder
}

// GetProof mocks base method.
func (m *MockGethClient) GetProof(arg0 context.Context, arg1 common.Address, arg2 []string, arg3 *big.Int) (*gethclient.AccountResult, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetProof", arg0, arg1, arg2, arg3)
	ret0, _ := ret[0].(*gethclient.AccountResult)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetProof indicates an expected call of GetProof.
func (mr *MockGethClientMockRecorder) GetProof(arg0, arg1, arg2, arg3 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetProof", reflect.TypeOf((*MockGethClient)(nil).GetProof), arg0, arg1, arg2, arg3)
}
