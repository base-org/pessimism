openapi: 3.0.3
info:
  title: Pessimism REST API
  description: This document specifies the REST API for the Pessimism application software.
  license:
    name: MIT License
  version: 1.0.0
externalDocs:
  description: Find out more about Pessimism
  url: 'https://github.com/base-org/pessimism/blob/master/specs/ARCHITECTURE.md'
servers:
  - url: 'http://localhost:8080'
tags:
  - name: invariant
    description: 'Invariant operations'
  - name: system
    description: 'System operations'
  
paths:
  /health:
    get:
      tags:
        - system
      summary: Returns the health of the application.
      description: >-
        Returns the health of the application. As of now this always returns true. This information might be useful for load-balancing or uptime monitoring.
      responses:
        '200':
          description: "Successful operation: indicates that the application is healthy."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthResponse'

  /v0/invariant:
    get:
      tags:
        - invariant
      parameters:
        - name: uuid
          in: query
          description: 'Invariant session uuid'
          required: true
          schema:
            type: string

      responses:
        '200':
          description: "Successful operation."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionGetResponse'
              examples:
                default:
                  $ref: '#/components/examples/get-inv-result-success'

        '400':
          description: 'Unsuccessful request unmarshaling or validation.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionGetResponse'
              examples:
                default:
                  $ref: '#/components/examples/get-session-dne'
             
        '500':
          description: 'Unsuccessful request processing thats resulted in an internal server.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionGetResponse'
              examples:
                default:
                  $ref: '#/components/examples/get-session-internal-err'  

    post:
      tags:
        - invariant
      summary: Performs some invariant based system option (ie. starting invariant session, removing session and deleting session)
      description: Returns operation status.
      requestBody:
        description: Invariant input
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InvariantParameters'
          text/plain:
            schema:
              type: string
      responses:
        '200':
          description: "Successful operation."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvariantResponse'
              examples:
                default:
                  $ref: '#/components/examples/get-session-success'

        '400':
          description: 'Unsuccessful request unmarshaling or validation.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvariantResponse'
              examples:
                default:
                  $ref: '#/components/examples/get-session-dne'
             
        '500':
          description: 'Unsuccessful request processing thats resulted in an internal server.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvariantResponse'
              examples:
                default:
                  $ref: '#/components/examples/get-inv-result-failed-unmarshal'

components:
  examples:
  
    get-session-internal-err:
      value:
        data:
          status: NOTOK
          result: {"error": "internal server error occured while processing request"}

    get-session-dne:
      value:
        data:
          status: NOTOK
          result: {"error": "session does not exist"}

    get-session-success:
      value:
        data:
          status: OK
          result:
            uuid: 0x420
            network: layer1
            type: live
            invariant: balance_enforcement
            alert_destination: slack
            invariant_params:
              address: 0x420
              upperBound: 100
              lowerBound: 0
            status: running
            created_at: 2021-09-01T00:00:00Z
            updated_at: 2021-09-01T00:00:00Z
            deleted_at: 2021-09-01T00:00:00Z
            deleted: false

    get-inv-result-success:
      value:
        data:
          status: OK
          result: {"invariant_uuid": 0x420}
    
    get-inv-result-failed-unmarshal:
      value:
        data:
          status: NOTOK
          result: {"error": "failed to decode invariant request"}
          
    get-inv-result-internal-error:
      value:
        data:
          status: NOTOK
          result: {"error": "internal server error occured while processing request"}
    
  schemas:

    SessionGetResponse:
      type: object
      properties:
        uuid:
          type: string
          description: 'Invariant session uuid'
        network:
          type: string
          description: 'Network type'
          enum: ["layer1", "layer2"]
        type:
          type: string
          description: 'Session type'
          enum: ["live", "backtest"]
        invariant:
          type: string
          description: 'Invariant type'
          enum: ["balance_enforcement"]
        alert_destination:
          type: string
          description: 'Alert destination'
          enum: ["slack"]
        invariant_params:
          $ref: '#/components/schemas/InvConfig'
        status:
          type: string
          description: 'Session status'
          enum: ["running", "stopped"]
        created_at:
          type: string
          description: 'Session creation timestamp'
        updated_at:
          type: string
          description: 'Session update timestamp'
        deleted_at:
          type: string
          description: 'Session deletion timestamp'
        deleted:
          type: boolean
          description: 'Indicates whether the session is deleted or not'

    OkInvResultObj:
      type: object
      properties:
        uuid:
          type: string
        
    NotOkInvResultObj:
      type: object
      properties:
        error:
          type: string
    
    result:
      type: object
      description: 'Response result object'
      oneOf:
        - $ref: '#/components/schemas/OkInvResultObj'
        - $ref: '#/components/schemas/NotOkInvResultObj'
    
    BalanceInvConfig:
      type: object
      properties:
        address: 
          type: string
        upperBound:
          type: number
        lowerBound:
          type: number  

      required:
        - address
        - upperBound
        - lowerBound

    InvConfig: 
      type: object
      oneOf:
        - $ref: '#/components/schemas/BalanceInvConfig'

    RunInvParameters:
      type: object
      description: Parameters necessary to run a new session.
      properties:
        network: 
          type: string
          enum: ["layer1", "layer2"]
        type: 
          type: string
          enum: ["live", "backtest"]
        invariant:
          type: string
          enum: ["balance_enforcement"]
        alert_destination:
          type: string
          enum: ["slack"]
          
        invariant_params:
          $ref: '#/components/schemas/InvConfig'

    
    UpdateInvParameters:
      type: object
      description: Parameters necessary to update an existing session.
      properties:
        uuid:
          description: 'Invariant session uuid'
          type: string
        invariant_params:
          description: 'Invariant configuration parameters'
          $ref: '#/components/schemas/InvConfig' 
  
      required:
      - uuid
      - invariant_params

    DeleteInvParameters:
      type: object
      description: Parameters necessary to update an existing session.
      properties:
        uuid:
          description: 'Invariant session uuid'
          type: string

      required:
        - uuid
      
    InvariantParameters:
      description: The invariant 
      properties:
        method:
          type: string
          enum: ['run', 'update', 'delete']
          description: Invariant method operation that's being invoked.
        params:
          oneOf:
            - $ref: '#/components/schemas/RunInvParameters'
            - $ref: '#/components/schemas/UpdateInvParameters'
            - $ref: '#/components/schemas/DeleteInvParameters'
          
      required:
        - method
        - params

    HealthResponse:
      type: object
      properties:
        Timestamp:
          type: string
          description: 'Timestamp of the health check'
        Healthy:
          type: boolean
          description: 'Indicates whether the application is healthy or not'

    InvariantResponse:
          description: The Transaction Payload to be embedded into a message.
          properties:
            status:
              type: string
              description: 'Response processing result'
              enum: [OK, NOTOK]
              
            result:
              $ref: '#/components/schemas/result' 