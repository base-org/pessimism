# Go test workflow
name: test

on:
  push:
    branches: [ "master", "development" ]
  pull_request:
    branches: [ "master", "development" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.19

    - name: Build App
      run: make build-app

  go-test:
    outputs:
      COVERAGE: ${{ steps.unit.outputs.coverage }}
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.19

    - name: Run Unit Tests
      id: unit
      run: go test -coverprofile=coverage.out ./internal/... >> out.txt 

    - name: Find Coverage Comment
      uses: peter-evans/find-comment@v1
      id: fc
      with:
        issue-number: ${{ github.event.pull_request.number }}
        comment-author: 'github-actions[bot]'
        body-includes: '###Current Test Coverage'

    - name: Update Coverage Comment
      if: steps.fc.outputs.comment-id != ''

      uses: actions/github-script@v6
      env:
        DATA: ${{ steps.fc.outputs.comment-id }}
        
      with:
        script: | 
          console.log(process.env.DATA);
          const fs = require('fs');
          const coverage = fs.readFileSync('out.txt', 'utf8');

          github.rest.issues.updateComment({
            owner: context.repo.owner,
            repo: context.repo.repo,
            comment_id: process.env.DATA,
            body: '### Current Test Coverage\n' + '```' + coverage + '```'
          })

    - name: Create Coverage Comment
      if: steps.fc.outputs.comment-id == ''

      uses: actions/github-script@v6
      with:
        script: | 
          const fs = require('fs');
          const coverage = fs.readFileSync('out.txt', 'utf8');

          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: '### Current Test Coverage\n' + '```' + coverage + '```'
          })

  e2e-test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.19

    - name: Run E2E Integration Tests
      run: make e2e-test

