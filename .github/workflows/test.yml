# Go test workflow
name: test

on:
  push:
    branches: [ "master", "development" ]
  pull_request:
    branches: [ "master", "development" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.19

    - name: Build App
      run: make build-app

    - name: Build Metric Doc
      run: make metric-docs

  go-test:
    outputs:
      COVERAGE: ${{ steps.unit.outputs.coverage }}
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.19

    - name: Run Unit Tests
      id: unit
      run: | 
        GOEXPERIMENT=coverageredesign go test -coverprofile=coverage.out ./internal/... >> out.txt &&
        go tool cover -func coverage.out | grep total | >> out.txt

    - name: Find Coverage Comment
      uses: peter-evans/find-comment@v1
      id: fc
      with:
        issue-number: ${{ github.event.pull_request.number }}
        comment-author: 'github-actions[bot]'
        body-includes: '### Current Test Coverage'

    - name: Add Coverage Comment
      uses: actions/github-script@v6
      env:
        DATA: ${{ steps.fc.outputs.comment-id }}

      with:
        script: | 
          const script = require('./.github/scripts/comment.js')
          await script({github, context, core})

  e2e-test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.19

    - name: Run E2E Integration Tests
      run: make e2e-test

